;; **
;; ** Widgets config for EWW
;; ** Created by : @adi1090x
;; ** Converted by : @tripleo1
;; **

;; ** Variables ***********************************************************************

;; Profile vars
(defvar IMAGE "images/profile.jpg")
(defvar NAME "YOUR NAME")
(defpoll UNAME :interval "5m" `whoami`)

;; System vars
(defpoll CPU_USAGE :interval "1s" `scripts/sys_info --cpu`)
(defpoll MEM_USAGE :interval "1s" `scripts/sys_info --mem`)
(defpoll BLIGHT :interval "1s" `scripts/sys_info --blight`)
(defpoll BATTERY :interval "5s" `scripts/sys_info --bat`)


;; Uptime vars
(defpoll UPHOUR :interval "5s" `uptime -p | awk '{print $2 \" \" $3}' | sed 's/,//g'`)
(defpoll UPMIN :interval "5s" `uptime -p | awk '{print $4 \" \" $5}'`)

;; Music vars
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)
(defpoll CURRENT :interval "1s" `scripts/music_info --time`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll CTIME :interval "1s" `scripts/music_info --ctime`)
(defpoll TTIME :interval "1s" `scripts/music_info --ttime`)

;; Weather vars
(defpoll ICON :interval "15m" `scripts/weather_info --icon`)
(defpoll STAT :interval "15m" `scripts/weather_info --stat`)
(defpoll TEMP :interval "15m" `scripts/weather_info --temp`)
(defpoll HEX :interval "15m" `scripts/weather_info --hex`)
(defpoll QUOTE :interval "15m" `scripts/weather_info --quote`)
(defpoll QUOTE2 :interval "15m" `scripts/weather_info --quote2`)

;; Apps vars
(defpoll MAILS :interval "5m" `scripts/mails`)

;; Files vars
(defpoll FREE :interval "5s" `df -h / | awk '{print $4}' | tail -n 1 | sed 's/G/GB/'`)

;;Monitor 0 width
(defpoll HEIGHT :interval "60s" `hyprctl monitors | grep "@"  | awk 'NR==1{print $1}' | sed 's/\([0-9]*\)x.*/\1/px'`)

;;Monitor 0 height
(defpoll WIDTH :interval "60s" `hyprctl monitors | grep "@"  | awk 'NR==1{print $1}' | sed 's/.*x\([0-9]*\)@.*/\1\*0.2' | bc | awk -F. '{print $1px}'`)

(defpoll TIME :interval "1s"
  `date +%H:%M:%S`)

(defpoll DATE :interval "60s" `date +"%a, %d.%m.%Y"`)

(defpoll UPTIME :interval "60s" `uptime | awk '{print $3}' | sed 's/,//'`)

(defpoll HOST :interval "20s" `echo "$(whoami)@$(hostname)"`)

(defpoll MUSIC :interval "2s" `playerctl  metadata --player=mpv --format "{{ artist }}-{{ title }}"`)

(defpoll REM :interval "1s" `playerctl metadata --player=mpv --format "Time remaining: {{ duration(mpris:length - position) }}"`)

;; ** Widgets *************************************************************************

;; clock
(defwidget clock [] 
    (box :class "wrapper" :hexpand true :vexpand true
        (box :orientation "v" :spacing 0 :space-evenly false
            (label :class "time" :valign "center" :text TIME)
            (label :class "date" :valign "center" :text DATE)
        )
    )
)

;;menu
(defwidget menu []
    (centerbox :class "menu" :orientation: "v"
        (box :class "uptime"
        (label :class "l_uptime" :text UPTIME))
        (box :class "host"
        (label :class "l_host" :text HOST))
        (box :class "battery"
        (label :class "l_battery" :text {EWW_BATTERY["BAT0"].capacity}))
    )
)

;; music
(defwidget music [] 
    (box :class "wrapper" :hexpand true :vexpand true
        (box :orientation "v" :spacing 0 :space-evenly false
            (button :onclick "playerctl next"
                (label :text "NEXT")
            )
            (button :onclick "playerctl previous"
                (label :text "PREV")
            )
            (button :onclick "playerctl play-pause"
                (label :text "PLAY/PAUSE")
            )
            (button :onclick "~/_mpv"
                (label :text "START")
            )
            (button :onclick "scripts/rm_song.sh"
                (label :text "DEL")
            )
            (label :wrap true :text MUSIC)
            (label :text REM)
            (input :value "yt-url" :onchange "~/_mpv")
        )
    )
)


;; clock
(defwindow clock :stacking "fg" :focusable "false" :screen 1 :monitor 0
	    :geometry (geometry :x 0 :y "3%" :width "300px" :height "10%" :anchor "top right")
					(clock))
;; menu
(defwindow menu :stacking "fg" :focusable "false" :screen 1 :monitor 0
	    :geometry (geometry :x 0 :y 0 :width "300px" :height "3%" :anchor "top right")
					(menu))

;; music
(defwindow music :stacking "fg" :focusable "true" :screen 1 :monitor 0
	    :geometry (geometry :x 0 :y "10%" :width "300px" :height "10%" :anchor "top right")
					(music))
